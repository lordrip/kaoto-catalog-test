{
  "type" : "array",
  "additionalProperties" : false,
  "items" : {
    "$ref" : "#/definitions/org.apache.camel.model.BeanFactoryDefinition"
  },
  "$schema" : "http://json-schema.org/draft-04/schema#",
  "definitions" : {
    "org.apache.camel.model.BeanFactoryDefinition" : {
      "title" : "Bean Factory",
      "description" : "Define custom beans that can be used in your Camel routes and in general.",
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "builderClass" : {
          "type" : "string",
          "title" : "Builder Class",
          "description" : "Fully qualified class name of builder class to use for creating and configuring the bean. The builder will use the properties values to configure the bean."
        },
        "builderMethod" : {
          "type" : "string",
          "title" : "Builder Method",
          "description" : "Name of method when using builder class. This method is invoked after configuring to create the actual bean. This method is often named build (used by default).",
          "default" : "build"
        },
        "constructors" : {
          "type" : "object",
          "title" : "Constructors",
          "description" : "Optional constructor arguments for creating the bean. Arguments correspond to specific index of the constructor argument list, starting from zero."
        },
        "destroyMethod" : {
          "type" : "string",
          "title" : "Destroy Method",
          "description" : "The name of the custom destroy method to invoke on bean shutdown, such as when Camel is shutting down. The method must have no arguments, but may throw any exception."
        },
        "factoryBean" : {
          "type" : "string",
          "title" : "Factory Bean",
          "description" : "Name of factory bean (bean id) to use for creating the bean."
        },
        "factoryMethod" : {
          "type" : "string",
          "title" : "Factory Method",
          "description" : "Name of method to invoke when creating the bean via a factory bean."
        },
        "initMethod" : {
          "type" : "string",
          "title" : "Init Method",
          "description" : "The name of the custom initialization method to invoke after setting bean properties. The method must have no arguments, but may throw any exception."
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "description" : "The name of the bean (bean id)"
        },
        "properties" : {
          "type" : "object",
          "title" : "Properties",
          "description" : "Optional properties to set on the created bean."
        },
        "script" : {
          "type" : "string",
          "title" : "Script",
          "description" : "The script to execute that creates the bean when using scripting languages. If the script use the prefix resource: such as resource:classpath:com/foo/myscript.groovy, resource:file:/var/myscript.groovy, then its loaded from the external resource."
        },
        "scriptLanguage" : {
          "type" : "string",
          "title" : "Script Language",
          "description" : "The script language to use when using inlined script for creating the bean, such as groovy, java, javascript etc."
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "description" : "The class name (fully qualified) of the bean"
        }
      },
      "required" : [ "name", "type" ]
    }
  }
}